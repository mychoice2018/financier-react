{"version":3,"sources":["../node_modules/reactstrap/es/ButtonGroup.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/ButtonToolbar.js","views/ui-components/BtnGroup.js"],"names":["propTypes","tag","tagPropType","PropTypes","string","className","cssModule","object","role","size","vertical","bool","ButtonGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","children","node","ButtonDropdown","Dropdown","group","inverse","color","body","outline","innerRef","oneOfType","func","Card","ref","CardBody","CardTitle","ButtonToolbar","BtnGroups","useState","isOpen1","setIsOpen1","isOpen2","setIsOpen2","Row","Col","xs","md","Button","isOpen","toggle","bind","DropdownToggle","caret","DropdownMenu","DropdownItem"],"mappings":"6GAAA,8EAMIA,EAAY,CACdC,IAAKC,IACL,aAAcC,IAAUC,OACxBC,UAAWF,IAAUC,OACrBE,UAAWH,IAAUI,OACrBC,KAAML,IAAUC,OAChBK,KAAMN,IAAUC,OAChBM,SAAUP,IAAUQ,MAOlBC,EAAc,SAAqBC,GACrC,IAAIR,EAAYQ,EAAMR,UAClBC,EAAYO,EAAMP,UAClBG,EAAOI,EAAMJ,KACbC,EAAWG,EAAMH,SACjBI,EAAMD,EAAMZ,IACZc,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,OAAQ,WAAY,QAEjGI,EAAUC,YAAgBC,IAAWd,IAAWI,GAAO,aAAeA,EAAcC,EAAW,qBAAuB,aAAcJ,GACxI,OAAOc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDV,UAAWY,MAIfL,EAAYZ,UAAYA,EACxBY,EAAYW,aApBO,CACjBtB,IAAK,MACLO,KAAM,SAmBOI,O,iCCpCf,sDAIIZ,EAAY,CACdwB,SAAUrB,IAAUsB,MAGlBC,EAAiB,SAAwBb,GAC3C,OAAOO,IAAMC,cAAcM,IAAUL,YAAS,CAC5CM,OAAO,GACNf,KAGLa,EAAe1B,UAAYA,EACZ0B,O,gCCff,8EAMI1B,EAAY,CACdC,IAAKC,IACL2B,QAAS1B,IAAUQ,KACnBmB,MAAO3B,IAAUC,OACjB2B,KAAM5B,IAAUQ,KAChBqB,QAAS7B,IAAUQ,KACnBN,UAAWF,IAAUC,OACrBE,UAAWH,IAAUI,OACrB0B,SAAU9B,IAAU+B,UAAU,CAAC/B,IAAUI,OAAQJ,IAAUC,OAAQD,IAAUgC,QAM3EC,EAAO,SAAcvB,GACvB,IAAIR,EAAYQ,EAAMR,UAClBC,EAAYO,EAAMP,UAClBwB,EAAQjB,EAAMiB,MACdC,EAAOlB,EAAMkB,KACbF,EAAUhB,EAAMgB,QAChBG,EAAUnB,EAAMmB,QAChBlB,EAAMD,EAAMZ,IACZgC,EAAWpB,EAAMoB,SACjBlB,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,aAE3HI,EAAUC,YAAgBC,IAAWd,EAAW,SAAQwB,GAAU,eAAsBE,GAAO,cAAqBD,IAASE,EAAU,SAAW,MAAQ,IAAMF,GAAgBxB,GACpL,OAAOc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDV,UAAWY,EACXoB,IAAKJ,MAITG,EAAKpC,UAAYA,EACjBoC,EAAKb,aAvBc,CACjBtB,IAAK,OAuBQmC,O,gCCxCf,8EAMIpC,EAAY,CACdC,IAAKC,IACLG,UAAWF,IAAUC,OACrBE,UAAWH,IAAUI,OACrB0B,SAAU9B,IAAU+B,UAAU,CAAC/B,IAAUI,OAAQJ,IAAUC,OAAQD,IAAUgC,QAM3EG,EAAW,SAAkBzB,GAC/B,IAAIR,EAAYQ,EAAMR,UAClBC,EAAYO,EAAMP,UAClB2B,EAAWpB,EAAMoB,SACjBnB,EAAMD,EAAMZ,IACZc,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzFI,EAAUC,YAAgBC,IAAWd,EAAW,aAAcC,GAClE,OAAOc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDV,UAAWY,EACXoB,IAAKJ,MAITK,EAAStC,UAAYA,EACrBsC,EAASf,aAnBU,CACjBtB,IAAK,OAmBQqC,O,gCChCf,8EAMItC,EAAY,CACdC,IAAKC,IACLG,UAAWF,IAAUC,OACrBE,UAAWH,IAAUI,QAMnBgC,EAAY,SAAmB1B,GACjC,IAAIR,EAAYQ,EAAMR,UAClBC,EAAYO,EAAMP,UAClBQ,EAAMD,EAAMZ,IACZc,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,YAAgBC,IAAWd,EAAW,cAAeC,GACnE,OAAOc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDV,UAAWY,MAIfsB,EAAUvC,UAAYA,EACtBuC,EAAUhB,aAjBS,CACjBtB,IAAK,OAiBQsC,O,0LCvBXvC,EAAY,CACdC,IAAKC,IACL,aAAcC,IAAUC,OACxBC,UAAWF,IAAUC,OACrBE,UAAWH,IAAUI,OACrBC,KAAML,IAAUC,QAOdoC,EAAgB,SAAuB3B,GACzC,IAAIR,EAAYQ,EAAMR,UAClBC,EAAYO,EAAMP,UAClBQ,EAAMD,EAAMZ,IACZc,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,YAAgBC,IAAWd,EAAW,eAAgBC,GACpE,OAAOc,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACvDV,UAAWY,MAIfuB,EAAcxC,UAAYA,EAC1BwC,EAAcjB,aAlBK,CACjBtB,IAAK,MACLO,KAAM,WAiBOgC,Q,oCCgJAC,UAhKG,KAAO,MAAD,EAEUC,oBAAS,GAFnB,mBAEbC,EAFa,KAEJC,EAFI,OAGUF,oBAAS,GAHnB,mBAGbG,EAHa,KAGJC,EAHI,KAapB,OACI,6BAII,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAIZ,kBAACd,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAWlC,UAAU,mCACjB,uBAAGA,UAAU,wCAAb,KADJ,gBAIA,kBAACiC,EAAA,EAAD,CAAUjC,UAAU,IAChB,6BACI,kBAACO,EAAA,EAAD,KACI,kBAACuC,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,mBAMpB,kBAACH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAIZ,kBAACd,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAWlC,UAAU,mCACjB,uBAAGA,UAAU,wCAAb,KADJ,kBAIA,kBAACiC,EAAA,EAAD,CAAUjC,UAAU,IAChB,kBAAC,EAAD,KACI,kBAACO,EAAA,EAAD,KACI,kBAACuC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,WAEJ,kBAACvC,EAAA,EAAD,KACI,kBAACuC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,WAEJ,kBAACvC,EAAA,EAAD,KACI,kBAACuC,EAAA,EAAD,eAMpB,kBAACH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAIZ,kBAACd,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAWlC,UAAU,mCACjB,uBAAGA,UAAU,8BAAb,KADJ,WAIA,kBAACiC,EAAA,EAAD,CAAUjC,UAAU,IAChB,kBAACO,EAAA,EAAD,KACI,kBAACuC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,UACA,kBAACzB,EAAA,EAAD,CACI0B,OAAQT,EACRU,QA9EhB,KACZT,GAAYD,KA6EgCW,KAAK,OAErB,kBAACC,EAAA,EAAD,CAAgBC,OAAK,GAArB,YACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD,4BAOxB,kBAACV,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAIZ,kBAACd,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAWlC,UAAU,mCACjB,uBAAGA,UAAU,8BAAb,KADJ,UAIA,kBAACiC,EAAA,EAAD,CAAUjC,UAAU,IAChB,kBAACO,EAAA,EAAD,CAAaH,KAAK,MACd,kBAAC0C,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,eAEJ,6BACA,kBAACvC,EAAA,EAAD,CAAaP,UAAU,QACnB,kBAAC8C,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,eAEJ,6BACA,kBAACvC,EAAA,EAAD,CAAaP,UAAU,OAAOI,KAAK,MAC/B,kBAAC0C,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,kBAKhB,kBAACH,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAIZ,kBAACd,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAWlC,UAAU,mCACjB,uBAAGA,UAAU,8BAAb,KADJ,sBAIA,kBAACiC,EAAA,EAAD,CAAUjC,UAAU,IAChB,kBAACO,EAAA,EAAD,CAAaF,UAAQ,GACjB,kBAACyC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,UACA,kBAACzB,EAAA,EAAD,CACI0B,OAAQP,EACRQ,QAnIhB,KACZP,GAAYD,KAkIgCS,KAAK,OAErB,kBAACC,EAAA,EAAD,CAAgBC,OAAK,GAArB,YACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,sBACA,kBAACA,EAAA,EAAD","file":"static/js/52.86aaae43.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'group'\n};\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      vertical = props.vertical,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"vertical\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? 'btn-group-' + size : false, vertical ? 'btn-group-vertical' : 'btn-group'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  role: 'toolbar'\n};\n\nvar ButtonToolbar = function ButtonToolbar(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'btn-toolbar'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nButtonToolbar.propTypes = propTypes;\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    ButtonToolbar,\r\n    ButtonDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from 'reactstrap';\r\n\r\nconst BtnGroups = () => {\r\n\r\n    const [isOpen1, setIsOpen1] = useState(false);\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n\r\n    const toggle1 = () => {\r\n        setIsOpen1(!isOpen1);\r\n    }\r\n\r\n    const toggle2 = () => {\r\n        setIsOpen2(!isOpen2);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* --------------------------------------------------------------------------------*/}\r\n            {/* Row*/}\r\n            {/* --------------------------------------------------------------------------------*/}\r\n            <Row>\r\n                <Col xs=\"12\" md=\"4\">\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    {/* Card-1*/}\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    <Card>\r\n                        <CardTitle className=\"bg-light border-bottom p-3 mb-0\">\r\n                            <i className=\"mdi mdi-checkbox-multiple-blank mr-2\"> </i>\r\n                Button Group\r\n              </CardTitle>\r\n                        <CardBody className=\"\">\r\n                            <div>\r\n                                <ButtonGroup>\r\n                                    <Button>Left</Button>\r\n                                    <Button>Middle</Button>\r\n                                    <Button>Right</Button>\r\n                                </ButtonGroup>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs=\"12\" md=\"4\">\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    {/* Card-2*/}\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    <Card>\r\n                        <CardTitle className=\"bg-light border-bottom p-3 mb-0\">\r\n                            <i className=\"mdi mdi-checkbox-multiple-blank mr-2\"> </i>\r\n                Button Toolbar\r\n              </CardTitle>\r\n                        <CardBody className=\"\">\r\n                            <ButtonToolbar>\r\n                                <ButtonGroup>\r\n                                    <Button>1</Button>\r\n                                    <Button>2</Button>\r\n                                    <Button>3</Button>\r\n                                    <Button>4</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup>\r\n                                    <Button>5</Button>\r\n                                    <Button>6</Button>\r\n                                    <Button>7</Button>\r\n                                </ButtonGroup>\r\n                                <ButtonGroup>\r\n                                    <Button>8</Button>\r\n                                </ButtonGroup>\r\n                            </ButtonToolbar>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs=\"12\" md=\"4\">\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    {/* Card-3*/}\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    <Card>\r\n                        <CardTitle className=\"bg-light border-bottom p-3 mb-0\">\r\n                            <i className=\"mdi mdi-cards-variant mr-2\"> </i>\r\n                Nesting\r\n              </CardTitle>\r\n                        <CardBody className=\"\">\r\n                            <ButtonGroup>\r\n                                <Button>1</Button>\r\n                                <Button>2</Button>\r\n                                <ButtonDropdown\r\n                                    isOpen={isOpen1}\r\n                                    toggle={toggle1.bind(null)}\r\n                                >\r\n                                    <DropdownToggle caret>Dropdown</DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem>Dropdown Link</DropdownItem>\r\n                                        <DropdownItem>Dropdown Link</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                            </ButtonGroup>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs=\"12\" md=\"6\">\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    {/* Card-4*/}\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    <Card>\r\n                        <CardTitle className=\"bg-light border-bottom p-3 mb-0\">\r\n                            <i className=\"mdi mdi-cards-variant mr-2\"> </i>\r\n                Sizing\r\n              </CardTitle>\r\n                        <CardBody className=\"\">\r\n                            <ButtonGroup size=\"lg\">\r\n                                <Button>Left</Button>\r\n                                <Button>Middle</Button>\r\n                                <Button>Right</Button>\r\n                            </ButtonGroup>\r\n                            <br />\r\n                            <ButtonGroup className=\"mt-2\">\r\n                                <Button>Left</Button>\r\n                                <Button>Middle</Button>\r\n                                <Button>Right</Button>\r\n                            </ButtonGroup>\r\n                            <br />\r\n                            <ButtonGroup className=\"mt-2\" size=\"sm\">\r\n                                <Button>Left</Button>\r\n                                <Button>Middle</Button>\r\n                                <Button>Right</Button>\r\n                            </ButtonGroup>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs=\"12\" md=\"6\">\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    {/* Card-4*/}\r\n                    {/* --------------------------------------------------------------------------------*/}\r\n                    <Card>\r\n                        <CardTitle className=\"bg-light border-bottom p-3 mb-0\">\r\n                            <i className=\"mdi mdi-cards-variant mr-2\"> </i>\r\n                Vertical variation\r\n              </CardTitle>\r\n                        <CardBody className=\"\">\r\n                            <ButtonGroup vertical>\r\n                                <Button>1</Button>\r\n                                <Button>2</Button>\r\n                                <ButtonDropdown\r\n                                    isOpen={isOpen2}\r\n                                    toggle={toggle2.bind(null)}\r\n                                >\r\n                                    <DropdownToggle caret>Dropdown</DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem>Dropdown Link</DropdownItem>\r\n                                        <DropdownItem>Dropdown Link</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </ButtonDropdown>\r\n                            </ButtonGroup>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            {/* --------------------------------------------------------------------------------*/}\r\n            {/* Row*/}\r\n            {/* --------------------------------------------------------------------------------*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BtnGroups;\r\n"],"sourceRoot":""}