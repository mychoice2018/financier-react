{"version":3,"sources":["components/todos/TodoItem.js","components/todos/TodoList.js","components/todos/TodoSearch.js","components/todos/TodoDetails.js","components/todos/FliterLink.js","components/todos/AddTodo.js","components/todos/TodosFilter.js","views/todo/Todo.js"],"names":["TodoItem","onTodoClick","onStarredClick","onDeleteClick","starred","onCheckClick","title","isCompleted","desc","deleted","active","id","ListGroupItem","className","onClick","ListGroupItemHeading","CustomInput","type","checked","label","onChange","ListGroupItemText","style","color","TodoList","showRightPart","dispatch","useDispatch","useEffect","fetchTodos","todos","filter","todosSearch","t","toLocaleLowerCase","concat","includes","Error","getVisibleTodos","useSelector","state","maintodoReducer","todoReducer","todosVisibilityFilter","todoSearch","todoDetails","ListGroup","flush","map","todo","key","todoCompleted","toggleStarredTodo","deleteTodo","console","log","TodoSearch","value","placeholder","e","target","defaultValue","TodoDetails","selectedTodos","Input","name","rows","updateTodo","Button","FilterLink","props","setVisibilityFilterTodo","children","AddContact","onButtonClick","length","Fragment","Form","onSubmit","preventDefault","addTodo","ModalBody","FormGroup","Label","for","ref","node","required","ModalFooter","useState","modal","setModal","toggle","bind","todoVisiblityFilter","SHOW_ALL_TODO","STARRED_TODO","COMPLETED_TODO","DELETED_TODO","Modal","isOpen","size","ModalHeader","AddTodo","Todo","showLeft","setShowLeft","showRight","setshowRight","TodosFilter"],"mappings":"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","file":"static/js/85.c544290a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListGroupItem,\r\n  CustomInput,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n} from \"reactstrap\";\r\nconst TodoItem = ({\r\n  onTodoClick,\r\n  onStarredClick,\r\n  onDeleteClick,\r\n  starred,\r\n  onCheckClick,\r\n  title,\r\n  isCompleted,\r\n  desc,\r\n  deleted,\r\n  active,\r\n  id,\r\n}) => (\r\n  <ListGroupItem\r\n    className={active === id ? \"bg-light\" : \"\"}\r\n    onClick={onTodoClick}\r\n  >\r\n    <div className=\"list-group-item-action border-bottom\">\r\n      <ListGroupItemHeading>\r\n        <span className=\"d-flex align-items-center\">\r\n          <CustomInput\r\n            type=\"checkbox\"\r\n            id={id}\r\n            checked={isCompleted}\r\n            label=\" \"\r\n            onChange={onCheckClick}\r\n          />\r\n          <span className=\"d-block\"> {title}</span>\r\n        </span>\r\n      </ListGroupItemHeading>\r\n      <ListGroupItemText className=\"mb-1\">\r\n        <span className=\"text-truncate d-block\">{desc}</span>\r\n      </ListGroupItemText>\r\n      <span>\r\n        <i\r\n          onClick={onStarredClick}\r\n          className={starred ? \"fas fa-star\" : \"far fa-star\"}\r\n          style={{ color: starred ? \"#FFC107\" : \"#495057\" }}\r\n        ></i>\r\n        {!deleted ? (\r\n          <i onClick={onDeleteClick} className=\"fas fa-trash-alt ml-3\"></i>\r\n        ) : (\r\n          <i onClick={onDeleteClick} className=\"icon-action-undo ml-3\"></i>\r\n        )}\r\n      </span>\r\n    </div>\r\n  </ListGroupItem>\r\n);\r\n\r\nTodoItem.propTypes = {\r\n  onTodoClick: PropTypes.func.isRequired,\r\n  onStarredClick: PropTypes.func.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useEffect } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  fetchTodos,\r\n  todoDetails,\r\n  deleteTodo,\r\n  toggleStarredTodo,\r\n  todoCompleted,\r\n} from \"../../redux/todos/Action\";\r\nimport { ListGroup } from \"reactstrap\";\r\nconst TodoList = ({ showRightPart }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchTodos());\r\n  }, [dispatch]);\r\n\r\n  /// Get Filtered Todo\r\n  const getVisibleTodos = (todos, filter, todosSearch) => {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return todos.filter(\r\n          (t) =>\r\n            !t.deleted &&\r\n            t.title\r\n              .toLocaleLowerCase()\r\n              .concat(\" \")\r\n              .includes(todosSearch.toLocaleLowerCase())\r\n        );\r\n      case \"starred\":\r\n        return todos.filter(\r\n          (t) =>\r\n            t.starred &&\r\n            !t.deleted &&\r\n            t.title\r\n              .toLocaleLowerCase()\r\n              .concat(\" \")\r\n              .includes(todosSearch.toLocaleLowerCase())\r\n        );\r\n      case \"deleted\":\r\n        return todos.filter(\r\n          (t) =>\r\n            t.deleted &&\r\n            t.title\r\n              .toLocaleLowerCase()\r\n              .concat(\" \")\r\n              .includes(todosSearch.toLocaleLowerCase())\r\n        );\r\n      case \"completed\":\r\n        return todos.filter(\r\n          (t) =>\r\n            !t.deleted &&\r\n            t.isCompleted &&\r\n            t.title\r\n              .toLocaleLowerCase()\r\n              .concat(\" \")\r\n              .includes(todosSearch.toLocaleLowerCase())\r\n        );\r\n      default:\r\n        throw new Error(\"Unknown filter: \" + filter);\r\n      //return todos\r\n    }\r\n  };\r\n\r\n  const todos = getVisibleTodos(\r\n    useSelector((state) => state.maintodoReducer.todos),\r\n    useSelector((state) => state.todoReducer.todosVisibilityFilter),\r\n    useSelector((state) => state.todoReducer.todoSearch)\r\n  );\r\n  //const todos = useSelector((state) => state.todoReducer.todos);\r\n  const active = useSelector((state) => state.maintodoReducer.todoDetails);\r\n\r\n  /// Return Todo\r\n  return (\r\n    <div>\r\n      <ListGroup flush className=\"listing-over border-top\">\r\n        {todos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            {...todo}\r\n            active={active}\r\n            onCheckClick={() => dispatch(todoCompleted(todo.id))}\r\n            onStarredClick={() => dispatch(toggleStarredTodo(todo.id))}\r\n            onDeleteClick={() => {\r\n              dispatch(deleteTodo(todo.id));\r\n              console.log(todo.id);\r\n            }}\r\n            onTodoClick={() => {\r\n              dispatch(todoDetails(todo.id));\r\n              showRightPart();\r\n            }}\r\n          />\r\n        ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { todoSearch } from \"../../redux/todos/Action\";\r\n\r\nconst TodoSearch = () => {\r\n  const value = useSelector((state) => state.todoReducer.todoSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"bg-light p-4\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search Todos\"\r\n        onChange={(e) => dispatch(todoSearch(e.target.value))}\r\n        defaultValue={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoSearch;\r\n","import React, { Fragment } from \"react\";\r\nimport { Input, CustomInput, Button } from \"reactstrap\";\r\n//import todoDetails from \"../../redux/todoDetails\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  updateTodo,\r\n  deleteTodo,\r\n  todoCompleted,\r\n} from \"../../redux/todos/Action\";\r\nconst TodoDetails = () => {\r\n  const selectedTodos = useSelector(\r\n    (state) =>\r\n      state.maintodoReducer.todos[state.maintodoReducer.todoDetails - 1]\r\n  );\r\n  //const editContactFlag = useSelector((state) => state.contactReducer.editContact);\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Fragment>\r\n      {selectedTodos && !selectedTodos.deleted ? (\r\n        <div className=\"p-4\">\r\n          <div>\r\n            <CustomInput\r\n              type=\"checkbox\"\r\n              id={selectedTodos.id}\r\n              checked={selectedTodos.isCompleted}\r\n              label=\" \"\r\n              onChange={() => dispatch(todoCompleted(selectedTodos.id))}\r\n            />\r\n            <h5 className=\"mt-4\">Task title</h5>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              rows=\"5\"\r\n              value={selectedTodos.title}\r\n              onChange={(e) =>\r\n                dispatch(updateTodo(selectedTodos.id, \"title\", e.target.value))\r\n              }\r\n            />\r\n            <h5 className=\"mt-4\">Task Description</h5>\r\n            <Input\r\n              type=\"textarea\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              rows=\"5\"\r\n              value={selectedTodos.desc}\r\n              onChange={(e) =>\r\n                dispatch(updateTodo(selectedTodos.id, \"desc\", e.target.value))\r\n              }\r\n            />\r\n            <Button\r\n              className=\"mt-4 btn btn-danger\"\r\n              onClick={() => {\r\n                dispatch(deleteTodo(selectedTodos.id));\r\n              }}\r\n            >\r\n              Delete Todo\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"d-flex h-100 p-4 flex-column align-items-center justify-content-center\">\r\n          <i className=\"far fa-address-card display-5\"></i>\r\n          <h4 className=\"mt-2\">Please select a Todo to see details.</h4>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoDetails;\r\n","import React from \"react\";\r\nimport { setVisibilityFilterTodo } from \"../../redux/todos/Action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst FilterLink = (props) => {\r\n  const active = useSelector(\r\n    (state) => props.filter === state.todoReducer.todosVisibilityFilter\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li\r\n      className={\"list-group-item\" + (active ? \" bg-light\" : \"\")}\r\n      onClick={() => dispatch(setVisibilityFilterTodo(props.filter))}\r\n    >\r\n      <span className=\"list-group-item-action\">{props.children}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FilterLink;\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/todos/Action\";\r\n\r\nconst AddContact = ({ onButtonClick }) => {\r\n  let title, desc;\r\n  const id = useSelector((state) => state.maintodoReducer.todos.length + 1);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch(addTodo(id, title.value, desc.value));\r\n          title.value = \"\";\r\n          desc.value = \"\";\r\n        }}\r\n      >\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"title\">Todo Title</Label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              ref={(node) => (title = node)}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"desc\">Todo Desc</Label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              name=\"desc\"\r\n              rows=\"5\"\r\n              id=\"desc\"\r\n              ref={(node) => (desc = node)}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={onButtonClick} type=\"submit\">\r\n            Add Todo\r\n          </Button>\r\n        </ModalFooter>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddContact;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, ModalHeader, ListGroup } from \"reactstrap\";\r\nimport { todoVisiblityFilter } from \"../../redux/todos/Action\";\r\nimport FilterLink from \"./FliterLink\";\r\nimport AddTodo from \"./AddTodo\";\r\nexport default (props) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"p-3\">\r\n        <span\r\n          onClick={toggle.bind(null)}\r\n          className=\"btn btn-danger d-block text-white\"\r\n        >\r\n          Add Task\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"filter-listing\">\r\n        <ListGroup flush>\r\n          <FilterLink filter={todoVisiblityFilter.SHOW_ALL_TODO}>\r\n            <i className=\"ti-clipboard mr-2\"></i> All\r\n          </FilterLink>\r\n        </ListGroup>\r\n        <hr className=\"\" />\r\n        <h6 className=\"mb-0 mt-2 p-3\">Filters</h6>\r\n        <ListGroup flush>\r\n          <FilterLink filter={todoVisiblityFilter.STARRED_TODO}>\r\n            <i className=\"far fa-star mr-2\"></i> Starred\r\n          </FilterLink>\r\n          <FilterLink filter={todoVisiblityFilter.COMPLETED_TODO}>\r\n            <i className=\"far fa-check-circle mr-2\"></i> Completed Todos\r\n          </FilterLink>\r\n          <FilterLink filter={todoVisiblityFilter.DELETED_TODO}>\r\n            <i className=\"icon-trash mr-2\"></i> Deleted Todos\r\n          </FilterLink>\r\n        </ListGroup>\r\n      </div>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={toggle.bind(null)}\r\n        className={props.className}\r\n        size=\"md\"\r\n      >\r\n        <ModalHeader toggle={toggle.bind(null)}>Add Contact</ModalHeader>\r\n        <AddTodo onButtonClick={toggle.bind(null)} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport TodoList from \"../../components/todos/TodoList\";\r\nimport TodoSearch from \"../../components/todos/TodoSearch\";\r\nimport TodoDetails from \"../../components/todos/TodoDetails\";\r\nimport TodosFilter from \"../../components/todos/TodosFilter\";\r\nimport \"./Todo.scss\";\r\nconst Todo = () => {\r\n  //const [Todos, setTodos] = useState([]);\r\n  const [showLeft, setShowLeft] = useState(false);\r\n  const [showRight, setshowRight] = useState(false);\r\n\r\n  const showLeftPart = () => {\r\n    setShowLeft(!showLeft);\r\n  };\r\n\r\n  const showRightPart = () => {\r\n    setshowRight(!showRight);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app-drawer\">\r\n        <div\r\n          className={\r\n            \"left-part bg-white \" + (showLeft === true ? \"show-panel\" : \"\")\r\n          }\r\n        >\r\n          <TodosFilter />\r\n        </div>\r\n        <div className=\"right-part bg-white app-drawer-content\">\r\n          <div\r\n            className={\r\n              \"right-left-part \" +\r\n              (showRight === true ? \"show-right-left-panel\" : \"\")\r\n            }\r\n          >\r\n            <span\r\n              onClick={showLeftPart.bind(null)}\r\n              className={\r\n                \"bg-primary show-left-part text-white d-block d-lg-none \" +\r\n                (showLeft === true ? \"left-part-open\" : \"\")\r\n              }\r\n            >\r\n              <i\r\n                className={\r\n                  showLeft === true\r\n                    ? \"fas fa-chevron-left\"\r\n                    : \"fas fa-chevron-right\"\r\n                }\r\n              ></i>\r\n            </span>\r\n            <TodoSearch />\r\n            <TodoList showRightPart={showRightPart.bind(null)} />\r\n          </div>\r\n          <div\r\n            className={\r\n              \"right-right-part \" +\r\n              (showRight === true\r\n                ? \"show-right-right-panel\"\r\n                : \"hide-right-right-part\")\r\n            }\r\n          >\r\n            <span\r\n              onClick={() => {\r\n                showRightPart();\r\n              }}\r\n              className={\r\n                \"hide-right-right-part d-block d-md-none \" +\r\n                (showRight === true ? \"right-right-part-open\" : \"\")\r\n              }\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </span>\r\n            <TodoDetails />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"sourceRoot":""}